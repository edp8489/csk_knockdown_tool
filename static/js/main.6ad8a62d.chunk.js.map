{"version":3,"sources":["styles.js","components/NavBar.jsx","components/InputsCard.jsx","mathUtils.js","plotUtils.js","App.jsx","index.js"],"names":["light","createTheme","palette","mode","primary","main","secondary","background","default","dark","paper","buttonSVG","viewBox","width","height","fill","cx","cy","r","stroke","strokeWidth","d","NavBar","props","themeToggle","Fragment","AppBar","position","Toolbar","Link","href","underline","color","sx","ml","mr","Typography","flexGrow","Button","onClick","Footer","className","style","fontSize","margin","textAlign","InputsCard","fastSelEntries","fastList","map","val","ind","MenuItem","value","fastDisp","Paper","elevation","marginTop","marginBottom","padding","variant","Box","component","noValidate","autoComplete","onSubmit","hdlSub","FormControl","TextField","required","id","label","type","name","fbruVal","onChange","hdlChg","FormLabel","RadioGroup","row","unitVal","FormControlLabel","control","Radio","m","minWidth","InputLabel","Select","labelId","fastVal","FormHelperText","selectFormat","metadata","psi_val","Fsu_ksi","fast_fsu","Fsu_MPa","mjs","fast_type","csk_angle","head_type","calcUltKnockdown","t","P","tcsk","Fbru","Fsu","Penv","Pbru","Psu","F","pi","P_i","jointStrengthEnvelope","plotPenv","tmin","tmax","teq","Ps","Fbr","tenv","genPlotPenv","console","log","tcsk_t","Kcsk","x","a","b","T10RGB","blue","orange","red","teal","green","yellow","purple","pink","brown","grey","T10RGB50A","colorNames","Object","keys","genEnvPlot","CJS","rawData","xLabel","yLabel","titleText","options","scales","beginAtZero","title","display","text","y","plugins","legend","formattedData","ultPts","points","el","xData","tsht","yData","Pult","borderColor","backgroundColor","dataTuples","data","pointBorderColor","pointBackgroundColor","showLine","envPlots","nomKcsk","pointRadius","borderDash","concat","register","LinearScale","PointElement","LineElement","Tooltip","Title","Legend","lightTheme","darkTheme","cskData","require","fSelDisp","mathUtils","fSelVal","App","React","useState","darkMode","toggleDark","readyToCalc","setReady","fbru","unit","fast_sel","userInputs","setInputs","outputSchema","userKcsk","outputState","setOutputs","theme","ChartJS","defaults","font","size","mpa_val","kcskPlot","min","max","plotUtils","rawDataPlot","dataset","ThemeProvider","CssBaseline","marginLeft","marginRight","typography","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","AccordionDetails","e","prevState","target","preventDefault","alert","selectedData","find","nK","sht_fbru2A","fast_ref","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.6ad8a62d.chunk.js","sourcesContent":["import {createTheme } from \"@mui/material/styles\";\n\nexport const light = createTheme({\n    palette: {\n      mode: \"light\",\n      primary: {\n        main: \"#1976d2\"\n      },\n      secondary: {\n        main: \"#d32f2f\"\n      },\n      background: {\n        default: \"#f5f5f5\"\n      }\n    }\n  });\n  \nexport const dark = createTheme({\npalette: {\n    mode: \"dark\",\n    primary: {\n    main: \"#1976d2\"\n    },\n    secondary: {\n    main: \"#d32f2f\"\n    },\n    background: {\n    default: \"rgb(43, 42, 51)\",\n    paper: \"rgba(66, 65, 77, 1)\"\n    }\n}\n});","import React from \"react\";\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport Button from \"@mui/material/Button\"\n\nconst buttonSVG = <svg viewBox=\"0 0 32 32\" width=\"24\" height=\"24\" fill=\"currentcolor\">\n                    <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"none\" stroke=\"currentcolor\" strokeWidth=\"4\"></circle>\n                    <path d=\"M 16 0 A 16 16 0 0 0 16 32 z\">\n                    </path>\n                </svg>\n\nexport function NavBar(props){\n    const {themeToggle} = props\n    return(\n        <React.Fragment>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n            <Link href=\"https://edp8489.github.io\"  underline=\"hover\" color=\"inherit\" sx={{ml:\"10px\", mr:\"10px\"}}>Home</Link>\n            <Link href=\"https://edp8489.github.io/portfolio\"  underline=\"hover\" color=\"inherit\" sx={{ml:\"10px\", mr:\"10px\"}}>Projects</Link>\n            <Typography sx={{flexGrow:1}}>&nbsp;</Typography>\n            <Button  color=\"inherit\" onClick={themeToggle} >{buttonSVG}</Button>\n            </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </React.Fragment>\n    )\n}\n\n\nexport function Footer(){\n  return(\n    <div className=\"credits\" style={{\n      fontSize: '0.8em',\n      margin: '8em auto -4em auto',\n      textAlign: 'center',\n  }} >\n      ©&nbsp;2022&nbsp;Eric Peters\n      &nbsp;\n      •\n      &nbsp;\n      <a href=\"https://edp8489.github.io\">Homepage</a>\n      &nbsp;\n      •\n      &nbsp;\n      <a href=\"https://www.linkedin.com/in/eric-peters-a187aa17/\">Linkedin</a>\n      &nbsp;\n      •\n      &nbsp;\n      <a href=\"https://github.com/edp8489\">github</a>\n  </div>\n  )\n}","import Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Select from '@mui/material/Select';\nimport Button from \"@mui/material/Button\";\n\nexport default function InputsCard(props){\n  // required props:\n  // state variable for numeric input value {fbruVal}\n  // state variable for unit radio value {unitVal}\n  // state variable for fastener Fsu select value {fastVal}\n  // state variable for fasteler select display text {fastDisp}\n  // handleChange function {hdlChg}\n  // handleSubmit function {hdlSub}\n  // array of options for fastener Fsu select {fastList}\n\n  const fastSelEntries = props.fastList.map((val, ind)=>(<MenuItem key={ind} value={val}>{props.fastDisp[ind]}</MenuItem>));\n\n\n  return(\n    <Paper elevation={3} sx={{...{ marginTop: \"10px\", marginBottom: \"10px\", padding:\"10px\" },...props.sx}}>\n      <Typography variant=\"overline\" >Inputs</Typography>\n      <br />\n      <Box\n      component=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={props.hdlSub}\n    >\n      <div>\n      <FormControl sx={{margin:\"10px\"}}>\n      <TextField\n          required\n          id=\"fbru-input\"\n          label=\"Sheet Fbru\"\n          type=\"number\"\n          name=\"fbru\"\n          value={props.fbruVal}\n          onChange={props.hdlChg}\n        />\n      </FormControl>\n      <FormControl sx={{margin:\"10px\"}}>\n      <FormLabel id=\"unit-radio-buttons-group-label\">Units</FormLabel>\n      <RadioGroup\n        row\n        aria-labelledby=\"units-radio-buttons-group-label\"\n        name=\"unit\"\n        value={props.unitVal}\n        onChange={props.hdlChg}\n      >\n        <FormControlLabel value=\"psi\" control={<Radio />} label=\"psi\" />\n        <FormControlLabel value=\"MPa\" control={<Radio />} label=\"MPa\" />\n      </RadioGroup>\n    </FormControl>\n    </div>\n    <div>\n    <FormControl sx={{ m: 1, minWidth: 200 }}>\n        <InputLabel id=\"fastener-select-helper-label\">Fastener Type</InputLabel>\n        <Select\n          required\n          labelId=\"fastener-select-helper-label\"\n          id=\"fastener-select-helper\"\n          label=\"Fastener Type\"\n          name=\"fast_sel\"\n          value={props.fastVal}\n          onChange={props.hdlChg}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {fastSelEntries}\n        </Select>\n        <FormHelperText>Consider head style and ultimate shear strength</FormHelperText>\n      </FormControl>\n    </div>\n    <Button variant=\"contained\" type=\"submit\">Calculate</Button>\n    </Box>\n    </Paper>\n  )\n}","import * as mjs from 'mathjs';\n\nconst MPA_TO_PSI = 145 // 1 MPa = 145 psi\nconst LBF_TO_NEWTON = 4.448 // 1 lbf = 4.448 N\n\nexport function mpa2psi(mpa_val){\n    return mjs.round(mpa_val*MPA_TO_PSI)\n  }\n\nexport function psi2mpa(psi_val){\n  return mjs.round(psi_val/MPA_TO_PSI)\n}\n  \nexport function lbf2newton(lbf_val){\n    return mjs.round(lbf_val*LBF_TO_NEWTON)\n  }\n\nexport function selectFormat(metadata){\n  let Fsu_ksi = metadata.fast_fsu/1000\n  let Fsu_MPa = psi2mpa(metadata.fast_fsu)\n\n  let formattedString = metadata.fast_type + \" (\"\n    + metadata.csk_angle + \" \" + metadata.head_type + \", Fsu: \" + Fsu_ksi + \" ksi / \" + Fsu_MPa +\" MPa)\"\n  return (formattedString)\n\n}\nexport function calcUltKnockdown(t, P, tcsk, d, Fbru, Fsu){\n  /*\n  Calculates nondimensional joint knockdown based on supplied data\n  INPUTS\n    t: array of joint thickness values [in]\n    P: array of joint (yld or ult) strength data [lbf]\n    tcsk: fastener countersunk head height [in]\n    d: fastener major diameter [in]\n    Fbru: sheet A-basis bearing strength [psi]\n    Fsu: fastener ultimate shear strength [psi]\n\n  RETURNS\n    tcsk_t: countersink depth ratio tcsk/t\n    Kcsk: Non-dimensional strength knockdown P/(joint bearing/shear envelope)\n  */\n let Penv = jointStrengthEnvelope(t,d,Fbru,Fsu);\n let plotPenv = genPlotPenv({tmin: mjs.min(t), tmax: mjs.max(t)},d, Fbru, Fsu);\n console.log(plotPenv)\n\n // calculate csk depth ratio for all sheet thicknesses\n let tcsk_t = mjs.dotDivide(tcsk,t);\n //console.log(tcsk_t)\n\n // calculate Kcsk for valid data pairs\n let Kcsk = P.map((x, ind) => mjs.evaluate(\"a/b\",{a:x, b:Penv[ind]}))\n\n  return {tcsk_t, Kcsk, plotPenv, d }\n}\n\nexport function calcUserKnockdown(userFbru, nomKcsk) {\n  // @TODO\n}\n\nexport function jointStrengthEnvelope(t, d, Fbru, Fsu){\n  /* Calculates bearing-shear strength envelope\n  INPUTS\n    t: array of joint thickness values [in]\n    d: hole nominal diameter [in]\n    Fbru: Joint ultimate bearing strength [psi]\n    Fsu: Fastener ultimate shear strength [psi]\n  RETURNS\n    Penv: (array) Ultimate load corresponding to each sheet thickness [lbf]\n  */\n let Pbru = mjs.evaluate(\"t*d*Fbru\",{t:t, d:d, Fbru:Fbru});\n let Psu = mjs.evaluate(\"F*pi*(d^2)/4\",{d:d, F:Fsu,pi:mjs.pi});\n let Penv = Pbru.map((P_i)=>mjs.min(P_i,Psu));\n return Penv\n}\n\nexport function genPlotPenv({tmin, tmax}, d, Fbru, Fsu){\n  let Psu = mjs.evaluate(\"F*pi*(d^2)/4\",{d:d, F:Fsu,pi:mjs.pi});\n  let teq = mjs.evaluate(\"Ps/(Fbr*d)\",{Ps:Psu, d:d, Fbr:Fbru});\n  let tenv = [tmin, teq, tmax];\n  let Penv = [mjs.evaluate(\"Fbr*t*d\",{Fbr:Fbru, t:tmin, d:d}),\n  Psu, Psu]\n  return {tenv, Penv}\n}","import { Scatter } from 'react-chartjs-2';\nimport {\n    //Chart as ChartJS,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Title,\n    Legend,\n  } from 'chart.js';\n\nexport const tableau10Hex = {\n    blue: \"#5778a4\",\n    orange: \"#e49444\",\n    red: \"#d1615d\",\n    teal: \"#85b6b2\",\n    green: \"#6a9f58\",\n    yellow: \"#e7ca60\",\n    purple: \"#a87c9f\",\n    pink: \"#f1a2a9\",\n    brown: \"#967662\",\n    grey: \"#b8b0ac\"\n}\n\nexport const T10RGB = {\n    blue: \"rgba(87, 120, 164, 1)\",\n    orange: \"rgba(228, 148, 68, 1)\",\n    red: \"rgba(209, 97, 93, 1)\",\n    teal: \"rgba(133, 182, 178, 1)\",\n    green: \"rgba(106, 159, 88, 1)\",\n    yellow: \"rgba(231, 202, 96, 1)\",\n    purple: \"rgba(168, 124, 159, 1)\",\n    pink: \"rgba(241, 162, 169, 1)\",\n    brown: \"rgba(150, 118, 98, 1)\",\n    grey: \"rgba(184, 176, 172, 1)\"\n}\n\nexport const T10RGB50A = {\n    blue: \"rgba(87, 120, 164, 0.5)\",\n    orange: \"rgba(228, 148, 68, 0.5)\",\n    red: \"rgba(209, 97, 93, 0.5)\",\n    teal: \"rgba(133, 182, 178, 0.5)\",\n    green: \"rgba(106, 159, 88, 0.5)\",\n    yellow: \"rgba(231, 202, 96, 0.5)\",\n    purple: \"rgba(168, 124, 159, 0.5)\",\n    pink: \"rgba(241, 162, 169, 0.5)\",\n    brown: \"rgba(150, 118, 98, 0.5)\",\n    grey: \"rgba(184, 176, 172, 0.5)\"\n}\n\nexport const colorNames = Object.keys(tableau10Hex);\n\n// @TODO Set text color (ChartJS.defaults.color) based on darkMode\n// ChartJS.defaults.font.size = 14\n\nexport function genKcskPlot(CJS, rawData, xLabel, yLabel, titleText){\n    // define plotting options\n    const options = {\n        scales: {\n            x:{\n                type:\"linear\",\n                min: 0,\n                max: 1,\n                beginAtZero: true,\n                title: {\n                    display:true, \n                    text:xLabel}\n            },\n            y:{\n                type:\"linear\",\n                min:0.5,\n                max:1.1,\n                beginAtZero: true,\n                title: {\n                    display: true,\n                    text: yLabel}\n            }\n        },\n        plugins: {\n            legend:{\n                position: \"right\"\n            },\n            title:{\n                display: true,\n                text: titleText\n            }\n        }\n    }\n\n    // prepare raw data for plotting\n    /* content:\n        data = {\n            datasets: [\n                {\n                    label: \"d = ## in\",\n                    data: [\n                        {\n                        x: [],\n                        y: []\n                        }\n                    ],\n                    borderColor: \"\",\n                    backgroundColor: \"\"\n                }\n            ],\n        }\n    */\n    let formattedData = {}\n    formattedData[\"datasets\"] = rawData.map((el, ind) => {\n        //todo\n        console.log(\"el: \")\n        console.log(el)\n        let label = \"d = \" + el.d + \" in\"\n        let xData = el.tcsk_t\n        let yData = el.Kcsk\n        let borderColor = T10RGB[colorNames[ind]]\n        //console.log(borderColor)\n        let backgroundColor = T10RGB50A[colorNames[ind]]\n        //console.log(backgroundColor)\n        let dataTuples = xData.map((x, ind) => {return {x: x, y:yData[ind]}})\n\n        // package everything\n        let dataset_i = {\n            label: label,\n            data: dataTuples,\n            pointBorderColor: borderColor,\n            pointBackgroundColor: backgroundColor,\n            pointRadius:4,\n            borderColor: backgroundColor,\n            backgroundColor:backgroundColor,\n            showLine: true\n        }\n        return dataset_i\n    })\n    console.log(formattedData)\n\n    CJS.register(LinearScale, PointElement, LineElement, Tooltip, Title, Legend);\n    return <Scatter options={options} data={formattedData} />\n}\n\nexport function formatData(xData, yData, seriesName) {\n    /*\n    Utility function to format dataset for use in ChartJS\n    \n    Inputs:\n        xData: array of x-axis data points\n        yData: array of y-axis data points\n        seriesName: Label for data series (legend entry)\n\n    Returns: \n        series = {\n                    label: seriesName,\n                    data: [\n                        {\n                        x: #,\n                        y: #\n                        }\n                    ],\n                    borderColor: ...,\n                    backgroundColor: ...\n                }\n    \n    Usage: \n    Formatted series can be appended to \"datasets\" array in CJS data object:\n        data = {\n            datasets: [\n                series, ...\n            ],\n        }\n    */\n\n    const dataTuples = xData.map((x, ind) => {return {x: x, y:yData[ind]}})\n\n    const series = {\n        label: seriesName,\n        data: dataTuples\n    }\n\n    return series\n\n}\n\nexport function genEnvPlot(CJS, rawData, xLabel, yLabel, titleText){\n    /*\n        rawData = {\n            points: [selectedData.dataset],\n            Penv: [nomCsk.Penv]\n        }\n    */\n    // define plotting options\n    console.log(rawData)\n    const options = {\n        scales: {\n            x:{\n                type:\"linear\",\n                //min: 0,\n                //max: 1,\n                beginAtZero: true,\n                title: {\n                    display:true, \n                    text:xLabel}\n            },\n            y:{\n                type:\"linear\",\n                //min:0.5,\n                //max:1.1,\n                beginAtZero: true,\n                title: {\n                    display: true,\n                    text: yLabel}\n            }\n        },\n        plugins: {\n            legend:{\n                position: \"top\"\n            },\n            title:{\n                display: true,\n                text: titleText\n            }\n        }\n    }\n\n    // prepare raw data for plotting\n    /* content:\n        data = {\n            datasets: [\n                {\n                    label: \"d = ## in\",\n                    data: [\n                        {\n                        x: [],\n                        y: []\n                        }\n                    ],\n                    borderColor: \"\",\n                    backgroundColor: \"\"\n                }\n            ],\n        }\n    */\n    let formattedData = {}\n    let ultPts = rawData.points.map((el, ind) => {\n        //console.log(\"el: \")\n        //console.log(el)\n        let label = \"d = \" + el.d + \" in\"\n        let xData = el.tsht\n        let yData = el.Pult\n        let borderColor = T10RGB[colorNames[ind]]\n        //console.log(borderColor)\n        let backgroundColor = T10RGB50A[colorNames[ind]]\n        //console.log(backgroundColor)\n        let dataTuples = xData.map((x, ind) => {return {x: x, y:yData[ind]}})\n\n        // package everything\n        let dataset_i = {\n            label: label,\n            data: dataTuples,\n            pointBorderColor: borderColor,\n            pointBackgroundColor: backgroundColor,\n            borderColor: backgroundColor,\n            backgroundColor:backgroundColor,\n            showLine: true\n        }\n        return dataset_i\n    })\n    //console.log(formattedData)\n    const envPlots = rawData.nomKcsk.map((el, ind) => {\n        //todo\n        console.log(\"Generating envelope plot\")\n        console.log(\"el: \")\n        console.log(el)\n        let label = \"Strength Envelope\"\n        //let xData = rawData.points[ind].tsht\n        let xData = el.plotPenv? el.plotPenv.tenv : []\n        let yData = el.plotPenv? el.plotPenv.Penv: []\n        let borderColor = T10RGB[colorNames[ind]]\n        //console.log(borderColor)\n        let backgroundColor = T10RGB50A[colorNames[ind]]\n        //console.log(backgroundColor)\n        let dataTuples = xData.map((x, ind) => {return {x: x, y:yData[ind]}})\n\n        // package everything\n        let dataset_i = {\n            label: label,\n            data: dataTuples,\n            pointRadius: 0,\n            borderColor: borderColor,\n            backgroundColor:backgroundColor,\n            borderDash: [10, 10],\n            showLine: true\n        }\n        return dataset_i\n    })\n    //formattedData[\"datasets\"].append(envPlots)\n    formattedData[\"datasets\"] = ultPts.concat(envPlots)\n    //console.log(formattedData)\n\n    CJS.register(LinearScale, PointElement, LineElement, Tooltip, Title, Legend);\n    return <Scatter options={options} data={formattedData} />\n}","import { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { Box, Paper } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport {light, dark} from \"./styles.js\";\nimport {NavBar, Footer} from \"./components/NavBar\";\nimport InputsCard from \"./components/InputsCard\";\nimport * as mathUtils from \"./mathUtils\"\nimport * as plotUtils from \"./plotUtils\"\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport {  Chart as ChartJS } from 'chart.js';\n\n// defined using let instead of const in case you want to set\n// other elements later based on primary/secondary colors\nlet lightTheme = light\nlet darkTheme = dark\n\n// uncomment next line to define additional customizations\n// theme = createTheme(theme, {**});\n\n// import data file\n// @TODO change this to a database query\nconst cskData = require(\"./data/csk_data.json\")\n\n// generate lists for select menu\nconst fSelDisp = cskData[\"fastener_data\"].map(x=>mathUtils.selectFormat(x.metadata))\nconst fSelVal = cskData[\"fastener_data\"].map(x=>x.metadata.id)\n\nexport default function App() {\n  const [darkMode, toggleDark] = React.useState(false);\n  const [readyToCalc, setReady] = React.useState(false)\n  const [userInputs, setInputs] = React.useState({\n    fbru: \"\",\n    unit: \"psi\",\n    fast_sel: \"\"\n  });\n  // @TODO expand state with Kcsk_user\n  const outputSchema = {\n    rawData:{},\n    nomKcsk:[],\n    userKcsk: []\n  }\n  const [outputState, setOutputs] = React.useState(outputSchema)\n  \n  let theme = darkMode ? darkTheme : lightTheme;\n\n  // set default text properties for chart objects\n  ChartJS.defaults.font.size = 14;\n  ChartJS.defaults.color = theme.palette.text.primary;\n\n  const handleChange = function(e) {\n    setInputs(prevState => {\n      return{...prevState, ...{[e.target.name]:e.target.value}}\n    })\n    setReady(false)\n    setOutputs(outputSchema)\n    e.preventDefault()\n  }\n\n  const calculate = function(e){\n    // only perform if all inputs are present\n    if (userInputs.fbru ===\"\" || userInputs.fast_sel ===\"\"){\n      alert(\"Please define all inputs first!\")\n    }\n    else {\n      setReady(true)\n      const selectedData = cskData[\"fastener_data\"].find(x => x.metadata.id === userInputs.fast_sel)\n      console.log(selectedData)\n      setOutputs(prevState =>{\n        return{...prevState, ...{rawData:selectedData}}\n      })\n      \n      // mathUtils.calcUltKnockdown(t, Pult, tcsk, d, Fbru, Fsu)\n      // calculate (tcsk_t, nomKcsk) for raw data\n      // @TODO\n      \n      let nK = selectedData.dataset.map(el => mathUtils.calcUltKnockdown(\n        el.tsht,\n        el.Pult,\n        el.tcsk,\n        el.d,\n        selectedData.metadata.sht_fbru2A,\n        selectedData.metadata.fast_fsu\n      ))\n      // console.log(nK)\n      setOutputs(prevState =>{\n        return{...prevState, ...{nomKcsk: nK}}\n      })\n      // calculate (tcsk_t, userKcsk) for user-supplied Fbru input\n      // @TODO\n    }\n    e.preventDefault()\n  }\n  let kcskPlot = plotUtils.genKcskPlot(ChartJS,\n    outputState.nomKcsk,\n     \"Countersink Depth Ratio (tcsk / t) [-]\",\n     \"Joint Strength Knockdown (Kcsk) [-]\",\n     \"Joint Strength Knockdown (nominal data)\"\n  )\n\n  let rawDataPlot = readyToCalc? plotUtils.genEnvPlot(ChartJS,\n    {points: outputState.rawData.dataset,nomKcsk:outputState.nomKcsk},\n    \"Sheet thickness (t) [in]\",\n    \"Joint Ultimate Strength [lbf]\",\n    \"Joint Ultimate Strength w/ Bearing-Shear Envelope\"\n  ) :\n  plotUtils.genEnvPlot(ChartJS,\n    {points:[],nomKcsk:[]},\n    \"Sheet thickness (t) [in]\",\n    \"Joint Ultimate Strength [lbf]\",\n    \"Joint Ultimate Strength w/ Bearing-Shear Envelope\")\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box className=\"App\" sx={{ width: \"75%\", marginLeft:\"12.5%\", marginRight:\"12.5%\" }}>\n        <NavBar themeToggle={() => toggleDark( !darkMode )} />\n        <Paper elevation={3} sx={{ marginTop: \"20px\", padding:\"10px\" }}>\n          <Typography component=\"div\">\n          <Box sx={{typography:\"h3\", textAlign:\"center\"}}>Countersunk Joint Knockdown Calculator</Box>\n          <br />\n          <Box sx={{typography:\"p\", textAlign:\"center\"}}>\n            (<em>June 2022 - in work</em>)<br />\n            This tool calculates strength knockdown factors for single-shear joints based on fastener type, fastener head style,\n            and parent material properties. <br />\n            \n            Data source: MIL-HDBK-5J / MMPDS-01.\n          </Box>\n          <br />\n            <Accordion TransitionProps={{ unmountOnExit: true }}>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                id=\"instructions-acc-header\">Instructions</AccordionSummary>\n              <AccordionDetails>\n                <Box sx={{ typography: \"p\", textAlign: \"left\" }}>\n                  Select fastener type from available datasets to generate knockdown curve.\n                  Provide ultimate bearing strength of your specific joint configuration to scale the non-dimensional knockdown\n                  curve appropriately.\n                  <br /> <br />\n                  <b>Sheet Bru:</b> Ultimate shear strength of user sheet material<br />\n                  <b>Units:</b> Units for user input <br />\n                  <b>Fastener Type:</b> Dataset for knockdown curve generation. Select based on fastener type, head style, and material ultimate shear strength.\n                </Box>\n                <br />\n                <Box sx={{ typography: \"subtitle\", textAlign: \"center\" }}>Returns</Box>\n                <Box sx={{ typography: \"p\" }}>\n                  1. Plot of selected dataset with ultimate bearing-shear envelopes for each diameter <br />\n                  2. Plot of non-dimensional strength knockdown vs countersink depth ratio for dataset<br />\n                  3. (TODO) Plot of strength knockdown vs countersink depth ratio with bearing-shear envelope scaled by user-supplied Fbru value\n                </Box>\n              </AccordionDetails>\n            </Accordion>\n          </Typography>\n        </Paper>\n        <InputsCard \n          fbruVal={userInputs.fbru}\n          unitVal={userInputs.unit}\n          fastVal={userInputs.fast_sel}\n          fastList={fSelVal}\n          fastDisp={fSelDisp}\n          hdlChg={handleChange}\n          hdlSub={calculate}\n          sx={{textAlign:\"center\"}} />\n        <Paper elevation={3} sx={{padding: \"10px\", textAlign:\"center\"}}>\n          <Typography variant=\"overline\">Outputs</Typography><br />\n          <span>{readyToCalc? \n            \"Click legend entries to toggle data display\":\n            \"User input required. Press 'Calculate' when ready\"}\n          </span>\n          <Accordion TransitionProps={{unmountOnExit: true}}>\n            <AccordionSummary \n                expandIcon={<ExpandMoreIcon />} \n                id=\"debug-acc-header\">\n              <Typography>Debug Info</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n            <ul>\n            <li>Fastener dropdown id: {readyToCalc? userInputs.fast_sel: \"\"}</li>\n            <li>Reference: {readyToCalc? outputState.rawData.metadata.fast_ref: \"\"}</li>\n            <li>User Fbru input: {readyToCalc? userInputs.fbru : \"\"} [{readyToCalc? userInputs.unit : \"\"}]</li>\n            <li>User Fbru (psi): {(readyToCalc && userInputs.unit!==\"psi\")?mathUtils.mpa2psi(userInputs.fbru):\"no conversion necessary\"}</li>\n          </ul>\n            </AccordionDetails>\n          </Accordion>\n          {rawDataPlot}\n          {kcskPlot}\n        </Paper>\n        <Footer />\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}