{"version":3,"sources":["styles.js","components/NavBar.jsx","components/InputsCard.jsx","components/InfoPanel.jsx","mathUtils.js","plotUtils.js","components/Graphs.jsx","App.jsx","index.js"],"names":["light","createTheme","palette","mode","primary","main","secondary","background","default","dark","paper","buttonSVG","viewBox","width","height","fill","cx","cy","r","stroke","strokeWidth","d","NavBar","props","themeToggle","Fragment","AppBar","position","Toolbar","Link","href","underline","color","sx","ml","mr","Typography","flexGrow","Button","onClick","Footer","className","style","fontSize","margin","textAlign","InputsCard","fastSelEntries","fastList","map","val","ind","MenuItem","value","fastDisp","Paper","elevation","marginTop","marginBottom","padding","variant","Box","component","noValidate","autoComplete","onSubmit","hdlSub","FormControl","m","minWidth","InputLabel","id","Select","required","labelId","label","name","fastVal","onChange","hdlChg","FormHelperText","TextField","disabled","type","fbruVal","FormLabel","RadioGroup","row","unitVal","FormControlLabel","control","Radio","InfoPanel","metadata","fast_ref","fast_type","fast_mat","fast_fsu","head_type","csk_angle","sht_mat","sht_ref","sht_fbru2A","isExpanded","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","AccordionDetails","Grid","container","spacing","justifyContent","item","colSpan","defaultProps","sht_fbry2A","units","dataset","tcsk","tsht","Pult","Pyld","selectFormat","psi_val","Fsu_ksi","Fsu_MPa","mjs","calcUltKnockdown","t","P","Fbru","Fsu","Penv","Pbru","Psu","F","pi","P_i","jointStrengthEnvelope","tcsk_t","Kcsk","x","a","b","T10RGB","blue","orange","red","teal","green","yellow","purple","pink","brown","grey","T10RGB50A","colorNames","Object","keys","formatData","xData","yData","seriesName","data","y","fmtKndPlotData","dataObj","formattedData","el","borderColor","backgroundColor","dataset_i","pointBorderColor","pointBackgroundColor","pointRadius","showLine","emptyData","datasets","DataEnvPlot","CJS","register","LinearScale","PointElement","LineElement","Tooltip","Title","Legend","options","scales","min","title","display","text","beginAtZero","plugins","legend","KcskPlot","max","userScaled","lightTheme","darkTheme","cskData","require","fSelDisp","mathUtils","fSelVal","App","React","useState","darkMode","toggleDark","readyToCalc","setReady","fbru","unit","fast_sel","userInputs","setInputs","outputSchema","rawData","nomKcsk","userKcsk","graph1CJS","graph2CJS","graph3CJS","outputState","setOutputs","theme","ChartJS","defaults","font","size","ThemeProvider","CssBaseline","marginLeft","marginRight","typography","e","prevState","target","preventDefault","alert","selectedData","find","plotPenv","tmin","tmax","tenv","Ps","Fbr","nK","uK","ultPts","points","envPlots","envelope","console","log","borderDash","forEach","push","plotUtils","expanded","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.d86170a6.chunk.js","sourcesContent":["import {createTheme } from \"@mui/material/styles\";\n\nexport const light = createTheme({\n    palette: {\n      mode: \"light\",\n      primary: {\n        main: \"#1976d2\"\n      },\n      secondary: {\n        main: \"#d32f2f\"\n      },\n      background: {\n        default: \"#f5f5f5\"\n      }\n    }\n  });\n  \nexport const dark = createTheme({\npalette: {\n    mode: \"dark\",\n    primary: {\n    main: \"#1976d2\"\n    },\n    secondary: {\n    main: \"#d32f2f\"\n    },\n    background: {\n    default: \"rgb(43, 42, 51)\",\n    paper: \"rgba(66, 65, 77, 1)\"\n    }\n}\n});","import React from \"react\";\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport Button from \"@mui/material/Button\"\n\nconst buttonSVG = <svg viewBox=\"0 0 32 32\" width=\"24\" height=\"24\" fill=\"currentcolor\">\n                    <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"none\" stroke=\"currentcolor\" strokeWidth=\"4\"></circle>\n                    <path d=\"M 16 0 A 16 16 0 0 0 16 32 z\">\n                    </path>\n                </svg>\n\nexport function NavBar(props){\n    const {themeToggle} = props\n    return(\n        <React.Fragment>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n            <Link href=\"https://edp8489.github.io\"  underline=\"hover\" color=\"inherit\" sx={{ml:\"10px\", mr:\"10px\"}}>Home</Link>\n            <Link href=\"https://edp8489.github.io/portfolio\"  underline=\"hover\" color=\"inherit\" sx={{ml:\"10px\", mr:\"10px\"}}>Projects</Link>\n            <Typography sx={{flexGrow:1}}>&nbsp;</Typography>\n            <Button  color=\"inherit\" onClick={themeToggle} >{buttonSVG}</Button>\n            </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </React.Fragment>\n    )\n}\n\n\nexport function Footer(){\n  return(\n    <div className=\"credits\" style={{\n      fontSize: '0.8em',\n      margin: '8em auto -4em auto',\n      textAlign: 'center',\n  }} >\n      ©&nbsp;2022&nbsp;Eric Peters\n      &nbsp;\n      •\n      &nbsp;\n      <a href=\"https://edp8489.github.io\">Homepage</a>\n      &nbsp;\n      •\n      &nbsp;\n      <a href=\"https://www.linkedin.com/in/eric-peters-a187aa17/\">Linkedin</a>\n      &nbsp;\n      •\n      &nbsp;\n      <a href=\"https://github.com/edp8489\">github</a>\n  </div>\n  )\n}","import Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Select from '@mui/material/Select';\nimport Button from \"@mui/material/Button\";\n\nexport default function InputsCard(props){\n  // required props:\n  // state variable for numeric input value {fbruVal}\n  // state variable for unit radio value {unitVal}\n  // state variable for fastener Fsu select value {fastVal}\n  // state variable for fasteler select display text {fastDisp}\n  // handleChange function {hdlChg}\n  // handleSubmit function {hdlSub}\n  // array of options for fastener Fsu select {fastList}\n\n  const fastSelEntries = props.fastList.map((val, ind)=>(<MenuItem key={ind} value={val}>{props.fastDisp[ind]}</MenuItem>));\n\n\n  return(\n    <Paper elevation={3} sx={{...{ marginTop: \"10px\", marginBottom: \"10px\", padding:\"10px\" },...props.sx}}>\n      <Typography variant=\"overline\" >Inputs</Typography>\n      <br />\n      <Box\n      component=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={props.hdlSub}\n    >\n      <div>\n    <FormControl sx={{ m: 1, minWidth: 200 }}>\n        <InputLabel id=\"fastener-select-helper-label\">Fastener Type</InputLabel>\n        <Select\n          required\n          labelId=\"fastener-select-helper-label\"\n          id=\"fastener-select-helper\"\n          label=\"Fastener Type\"\n          name=\"fast_sel\"\n          value={props.fastVal}\n          onChange={props.hdlChg}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {fastSelEntries}\n        </Select>\n        <FormHelperText>Consider head style and ultimate shear strength</FormHelperText>\n      </FormControl>\n    </div>\n      <div>\n      <FormControl sx={{margin:\"10px\"}}>\n      <TextField\n          disabled\n          id=\"fbru-input\"\n          label=\"Sheet Fbru\"\n          type=\"number\"\n          name=\"fbru\"\n          value={props.fbruVal}\n          onChange={props.hdlChg}\n        />\n      </FormControl>\n      <FormControl sx={{margin:\"10px\"}}>\n      <FormLabel id=\"unit-radio-buttons-group-label\">Units</FormLabel>\n      <RadioGroup\n        row\n        aria-labelledby=\"units-radio-buttons-group-label\"\n        name=\"unit\"\n        value={props.unitVal}\n        onChange={props.hdlChg}\n      >\n        <FormControlLabel disabled value=\"psi\" control={<Radio />} label=\"psi\" />\n        <FormControlLabel disabled value=\"MPa\" control={<Radio />} label=\"MPa\" />\n      </RadioGroup>\n    </FormControl>\n    </div>\n    <Button variant=\"contained\" type=\"submit\">Calculate</Button>\n    </Box>\n    </Paper>\n  )\n}","import {useEffect, useState} from 'react';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Typography from \"@mui/material/Typography\";\nimport Grid from '@mui/material/Grid';\n\n/**\n* Accordion panel showing metadata for the selected dataset\n* @component\n*\n* @todo control whether panel is expanded or not based on props\n* @todo Head style formatting for protruding head data\n*/\nexport default function InfoPanel(props) {\n    \n\n    // unpack dataset from props\n    const {fast_ref, fast_type, fast_mat, fast_fsu, head_type, csk_angle} = props.metadata;\n    const {sht_mat, sht_ref, sht_fbru2A} = props.metadata;\n    let {isExpanded}=props;\n\n    return (\n        <Accordion \n            TransitionProps={{ unmountOnExit: true }}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                id=\"info-acc-header\">\n                <Typography>Dataset Information</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <Grid container spacing={2} justifyContent=\"center\">\n                    <Grid item>\n                <table >\n                    <thead>\n                    <tr><th colSpan={2} style={{textAlign:\"center\"}}>Fastener Info</th></tr>\n                    </thead>\n                <tbody>\n                    <tr><td style={{textAlign:\"left\"}}><b>Type</b></td><td>{fast_type} ({csk_angle? csk_angle + \" \" : \"\"}{head_type})</td></tr>\n                    <tr><td style={{textAlign:\"left\"}}><b>Material</b></td><td>{fast_mat} ({fast_fsu/1000} ksi Fsu)</td></tr>\n                    <tr><td style={{textAlign:\"left\"}}><b>Data Reference</b></td><td>{fast_ref}</td></tr>\n                </tbody></table>\n                </Grid>\n                <Grid item>\n                <table >\n                    <thead>\n                    <tr><th colSpan={2} style={{textAlign:\"center\"}}>Sheet Info</th></tr>\n                    </thead>\n                <tbody>\n                    <tr><td style={{textAlign:\"left\"}}><b>Material</b></td><td>{sht_mat} ({sht_fbru2A/1000} ksi Fbru; e/D=2; A-basis)</td></tr>\n                    <tr><td style={{textAlign:\"left\"}}><b>Data Reference</b></td><td>{sht_ref}</td></tr>\n                </tbody></table>\n                </Grid>\n                </Grid>\n            </AccordionDetails>\n        </Accordion>\n    )\n}\n\nInfoPanel.defaultProps = {\n    isExpanded:false,\n    metadata:{\n        id:\"\",\n        fast_ref: \"\",\n        fast_type: \"\",\n        fast_fsu: 0,\n        fast_mat:\"\",\n        sht_mat: \"\",\n        sht_ref: \"\",\n        sht_fbru2A: 0,\n        sht_fbry2A: 0,\n        units:\"\",\n        csk_angle:\"\",\n        head_type:\"\"\n    },\n    dataset:[{\n      d:0,\n      tcsk:0,\n      tsht:[],\n      Pult:[],\n      Pyld:[]\n    }]\n}","import * as mjs from 'mathjs';\n\nconst MPA_TO_PSI = 145 // 1 MPa = 145 psi\nconst LBF_TO_NEWTON = 4.448 // 1 lbf = 4.448 N\n\nexport function mpa2psi(mpa_val){\n    return mjs.round(mpa_val*MPA_TO_PSI)\n  }\n\nexport function psi2mpa(psi_val){\n  return mjs.round(psi_val/MPA_TO_PSI)\n}\n  \nexport function lbf2newton(lbf_val){\n    return mjs.round(lbf_val*LBF_TO_NEWTON)\n  }\n\nexport function selectFormat(metadata){\n  let Fsu_ksi = metadata.fast_fsu/1000\n  let Fsu_MPa = psi2mpa(metadata.fast_fsu)\n\n  let formattedString = metadata.fast_type + \" (\"\n    + metadata.csk_angle + \" \" + metadata.head_type + \", Fsu: \" + Fsu_ksi + \" ksi / \" + Fsu_MPa +\" MPa)\"\n  return (formattedString)\n\n}\nexport function calcUltKnockdown(t, P, tcsk, d, Fbru, Fsu){\n  /*\n  Calculates nondimensional joint knockdown based on supplied data\n  INPUTS\n    t: array of joint thickness values [in]\n    P: array of joint (yld or ult) strength data [lbf]\n    tcsk: fastener countersunk head height [in]\n    d: fastener major diameter [in]\n    Fbru: sheet A-basis bearing strength [psi]\n    Fsu: fastener ultimate shear strength [psi]\n\n  RETURNS\n    tcsk_t: countersink depth ratio tcsk/t\n    Kcsk: Non-dimensional strength knockdown P/(joint bearing-shear envelope)\n  */\n let Penv = jointStrengthEnvelope(t,d,Fbru,Fsu);\n\n // calculate csk depth ratio for all sheet thicknesses\n let tcsk_t = mjs.dotDivide(tcsk,t);\n //console.log(tcsk_t)\n\n // calculate Kcsk for valid data pairs\n let Kcsk = P.map((x, ind) => mjs.evaluate(\"a/b\",{a:x, b:Penv[ind]}))\n\n  return {tcsk_t, Kcsk, d }\n}\n\nexport function jointStrengthEnvelope(t, d, Fbru, Fsu){\n  /* Calculates bearing-shear strength envelope\n  INPUTS\n    t: array of joint thickness values [in]\n    d: hole nominal diameter [in]\n    Fbru: Joint ultimate bearing strength [psi]\n    Fsu: Fastener ultimate shear strength [psi]\n  RETURNS\n    Penv: (array) Ultimate load corresponding to each sheet thickness [lbf]\n  */\n let Pbru = mjs.evaluate(\"t*d*Fbru\",{t:t, d:d, Fbru:Fbru});\n let Psu = mjs.evaluate(\"F*pi*(d^2)/4\",{d:d, F:Fsu,pi:mjs.pi});\n let Penv = Pbru.map((P_i)=>mjs.min(P_i,Psu));\n return Penv\n}\n\nexport function genPlotPenv(t, d, Fbru, Fsu){\n  /*\n  Calculates bearing-shear strength envelope plot for given thickness range,\n  fastener diameter, and material strengths\n  INPUTS\n    tmin: minimum sheet thickness to begin envelope [in]\n    tmax: maximum sheet thickness to end envelope [in]\n    d:    fastener diameter [in]\n    Fbru: Material ultimate bearing strength [psi]\n    Fsu:  fastener ultimate shear strength [psi]\n  \n  RETURNS\n    {\n      d: fastener diameter\n      tenv: array of thickness values for envelope plot [in]\n      Penv: array of ultimate strength values for envelope plot [lbf]\n    }\n  */\n\n  let tmin = mjs.min(t)\n  let tmax = mjs.max(t)\n  let Psu = mjs.evaluate(\"F*pi*(d^2)/4\",{d:d, F:Fsu,pi:mjs.pi});\n  let teq = mjs.evaluate(\"Ps/(Fbr*d)\",{Ps:Psu, d:d, Fbr:Fbru});\n\n  // calculate thickness where sheet Pbru = fastener Psu\n  let tenv = [tmin, teq, tmax];\n  let Penv = [mjs.evaluate(\"Fbr*t*d\",{Fbr:Fbru, t:tmin, d:d}),\n  Psu, Psu]\n\n  let plotPenv = {d, tenv, Penv}\n  return plotPenv\n}\n\nexport function calcGenericKnd(tcsk_t){\n  /*\n  Calculates a generic knockdown curve based on available data\n  @TODO\n  */\n}","import { Scatter } from 'react-chartjs-2';\nimport {\n    //Chart as ChartJS,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Title,\n    Legend,\n  } from 'chart.js';\n\nexport const tableau10Hex = {\n    blue: \"#5778a4\",\n    orange: \"#e49444\",\n    red: \"#d1615d\",\n    teal: \"#85b6b2\",\n    green: \"#6a9f58\",\n    yellow: \"#e7ca60\",\n    purple: \"#a87c9f\",\n    pink: \"#f1a2a9\",\n    brown: \"#967662\",\n    grey: \"#b8b0ac\"\n}\n\nexport const T10RGB = {\n    blue: \"rgba(87, 120, 164, 1)\",\n    orange: \"rgba(228, 148, 68, 1)\",\n    red: \"rgba(209, 97, 93, 1)\",\n    teal: \"rgba(133, 182, 178, 1)\",\n    green: \"rgba(106, 159, 88, 1)\",\n    yellow: \"rgba(231, 202, 96, 1)\",\n    purple: \"rgba(168, 124, 159, 1)\",\n    pink: \"rgba(241, 162, 169, 1)\",\n    brown: \"rgba(150, 118, 98, 1)\",\n    grey: \"rgba(184, 176, 172, 1)\"\n}\n\nexport const T10RGB50A = {\n    blue: \"rgba(87, 120, 164, 0.5)\",\n    orange: \"rgba(228, 148, 68, 0.5)\",\n    red: \"rgba(209, 97, 93, 0.5)\",\n    teal: \"rgba(133, 182, 178, 0.5)\",\n    green: \"rgba(106, 159, 88, 0.5)\",\n    yellow: \"rgba(231, 202, 96, 0.5)\",\n    purple: \"rgba(168, 124, 159, 0.5)\",\n    pink: \"rgba(241, 162, 169, 0.5)\",\n    brown: \"rgba(150, 118, 98, 0.5)\",\n    grey: \"rgba(184, 176, 172, 0.5)\"\n}\n\nexport const colorNames = Object.keys(tableau10Hex);\n\nexport function formatData(xData, yData, seriesName) {\n    /*\n    Utility function to format dataset for use in ChartJS\n    \n    Inputs:\n        xData: array of x-axis data points\n        yData: array of y-axis data points\n        seriesName: Label for data series (legend entry)\n\n    Returns: \n        series = {\n                    label: seriesName,\n                    data: [\n                        {\n                        x: #,\n                        y: #\n                        }\n                    ],\n                    borderColor: ...,\n                    backgroundColor: ...\n                }\n    \n    Usage: \n    Formatted series can be appended to \"datasets\" array in CJS data object:\n        data = {\n            datasets: [\n                series, ...\n            ],\n        }\n    */\n\n    const dataTuples = xData.map((x, ind) => {return {x: x, y:yData[ind]}})\n\n    const series = {\n        label: seriesName,\n        data: dataTuples\n    }\n\n    return series\n\n}\n\nexport function fmtEnvPlotData(dataObj){\n    /*\n    Formats data for use in plot of data points w/ bearing-shear strength envelope\n\n    INPUTS\n        dataObj: {\n            points: [{\n                d = number,\n                tsht: [],\n                Pult: []\n            }],\n            envelope: [{\n                d: number,\n                tenv: [],\n                Penv: []\n            }]\n        }\n    \n    RETURNS\n        formattedData: {\n        datasets: [\n                    {\n                    label: \"\",\n                    data: [\n                        {\n                        x: (scalar),\n                        y: (scalar)\n                        }\n                    ]\n                    }\n                ]\n        }\n    */\n    \n    const ultPts = dataObj.points.map((el, ind) => {\n        //console.log(\"el: \")\n        //console.log(el)\n        let label = \"d = \" + el.d + \" in\"\n        let xData = el.tsht\n        let yData = el.Pult\n        let borderColor = T10RGB[colorNames[ind]]\n        //console.log(borderColor)\n        let backgroundColor = T10RGB50A[colorNames[ind]]\n        //console.log(backgroundColor)\n\n        // format x- and y- data arrays in ChartJS structure\n        let dataset_i = formatData(xData,yData,label)\n        \n        // add additional options\n        dataset_i = {\n            ...dataset_i,\n            ...{\n                pointBorderColor: borderColor,\n                pointBackgroundColor: backgroundColor,\n                borderColor: backgroundColor,\n                backgroundColor:backgroundColor,\n                showLine: true\n            }\n        }\n        return dataset_i\n    })\n\n    const envPlots = dataObj.envelope.map((el, ind) => {\n        //todo\n        console.log(\"Generating envelope plot\")\n        //console.log(\"el: \")\n        //console.log(el)\n        let label = \"Strength Envelope\"\n        //let xData = rawData.points[ind].tsht\n        let xData = el.tenv \n        let yData = el.Penv\n        let borderColor = T10RGB[colorNames[ind]]\n        //console.log(borderColor)\n        let backgroundColor = T10RGB50A[colorNames[ind]]\n        //console.log(backgroundColor)\n\n        // format x- and y- arrays into ChartJS structure\n        let dataset_i = formatData(xData,yData,label)\n\n        // add additional options\n        dataset_i = {\n            ...dataset_i,\n            ...{\n                pointRadius: 0,\n                borderColor: borderColor,\n                backgroundColor:backgroundColor,\n                borderDash: [10, 10],\n                showLine: true\n                }\n            }\n        return dataset_i\n    })\n\n    // alternate between data points and envelope plots so legend entries are grouped\n    let formattedData = {datasets:[]}\n    ultPts.forEach((el, ind) =>{\n        formattedData['datasets'].push(el)\n        // only add envelope plot if it correlates w/ same diameter fastener\n        if (dataObj.envelope[ind].d === dataObj.points[ind].d){\n            formattedData['datasets'].push(envPlots[ind])}\n    })\n    console.log(\"formatted envelope plot data obj:\")\n    console.log(formattedData)\n    return formattedData\n}\n\nexport function fmtKndPlotData(dataObj){\n    /*\n    Formats data for use in plot of data points w/ bearing-shear strength envelope\n\n    INPUTS\n        dataObj: [{\n            d: (scalar) fastener diameter\n            tcsk_t: (array)\n            Kcsk: (array)\n        }]\n\n    RETURNS\n      Object in ChartJS syntax\n        formattedData: {\n          datasets: [\n                    {\n                    label: \"\",\n                    data: [\n                        {\n                        x: (scalar),\n                        y: (scalar)\n                        }\n                    ]\n                    }\n                ]\n        }\n    */\n    let formattedData = {}\n    formattedData[\"datasets\"] = dataObj.map((el, ind) => {\n        //console.log(\"el: \")\n        //console.log(el)\n        let label = \"d = \" + el.d + \" in\"\n        let xData = el.tcsk_t\n        let yData = el.Kcsk\n        let borderColor = T10RGB[colorNames[ind]]\n        //console.log(borderColor)\n        let backgroundColor = T10RGB50A[colorNames[ind]]\n        //console.log(backgroundColor)\n\n        // format x- and y- data arrays into ChartJS structure\n        let dataset_i = formatData(xData, yData, label);\n        \n        // add additional properties to dataset\n        dataset_i = {\n            ...dataset_i,\n            ...{\n                pointBorderColor: borderColor,\n                pointBackgroundColor: backgroundColor,\n                pointRadius:4,\n                borderColor: backgroundColor,\n                backgroundColor:backgroundColor,\n                showLine: true\n                }\n        }\n        return dataset_i\n    })\n\n    return formattedData\n}","import { Scatter } from 'react-chartjs-2';\nimport {\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Title,\n    Legend,\n  } from 'chart.js';\n\nexport const emptyData = {\n  datasets: [\n    {\n      label: \"\",\n      data: [\n        {\n          x: null,\n          y: null\n        }\n      ]\n    }\n  ]\n}\n\nexport function DataEnvPlot(props){\n  /*\n  Component wrapper for ChartJS scatter plot, customized for selected data series with\n  bearing-shear envelope overlays\n\n  Props:\n    CJS: ChartJS instance from app\n    data: dataset formatted per ChartJS syntax\n  */\n\n  const { CJS } = props;\n  const data = props.data? props.data : emptyData\n\n  // define plotting options\n  const options = {\n      scales: {\n          x:{\n              type:\"linear\",\n              min: 0.01,\n              //max: 1,\n              //beginAtZero: true,\n              title: {\n                  display:true, \n                  text: \"Sheet thickness (t) [in]\"\n                }\n          },\n          y:{\n              type:\"linear\",\n              //min:0.5,\n              //max:1.1,\n              beginAtZero: true,\n              title: {\n                  display: true,\n                  text: \"Joint Ultimate Strength [lbf]\"\n                }\n          }\n      },\n      plugins: {\n          legend:{\n              position: \"top\"\n          },\n          title:{\n              display: true,\n              text: \"Joint Ultimate Strength w/ Bearing-Shear Envelope\"\n          }\n      }\n  }\n\n\n  CJS.register(LinearScale, PointElement, LineElement, Tooltip, Title, Legend);\n  return <Scatter options={options} data={data} />\n}\n\nexport function KcskPlot(props){\n  /*\n  Component wrapper for ChartJS scatter plot, customized for calculated Kcsk knockdown\n  based on selected data set\n\n  Props:\n    CJS: ChartJS instance from app\n    data: Kcsk data formatted per ChartJS syntax\n    userScaled: boolean stating whether data is scaled to suer-supplied Fbru\n  */\n\n  const {CJS} = props;\n  const data = props.data? props.data : emptyData\n\n\n  // change title depending on data \n  const titleTxt = props.userScaled? \n  \"Joint Bearing Strength Knockdown (scaled to User Fbru)\" \n  : \"Joint Bearing Strength Knockdown (as-tested)\"\n  const options = {\n    scales: {\n        x:{\n            type:\"linear\",\n            min: 0,\n            // max: 1,\n            beginAtZero: true,\n            title: {\n                display:true, \n                text: \"Countersink Depth Ratio (tcsk / t) [-]\"\n              }\n        },\n        y:{\n            type:\"linear\",\n            min:0.5,\n            max:1.1,\n            beginAtZero: true,\n            title: {\n                display: true,\n                text: \"Joint Strength Knockdown (Kcsk) [-]\"\n              }\n        }\n    },\n    plugins: {\n        legend:{\n            position: \"right\"\n        },\n        title:{\n            display: true,\n            text: titleTxt\n        }\n    }\n  }\n\n  CJS.register(LinearScale, PointElement, LineElement, Tooltip, Title, Legend);\n  return <Scatter options={options} data={data} />\n}","import { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { Box, Paper } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport { light, dark } from \"./styles.js\";\nimport { NavBar, Footer } from \"./components/NavBar\";\nimport InputsCard from \"./components/InputsCard\";\nimport InfoPanel from \"./components/InfoPanel\";\nimport * as mathUtils from \"./mathUtils\"\nimport * as plotUtils from \"./plotUtils\"\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Chart as ChartJS } from 'chart.js';\nimport { DataEnvPlot, KcskPlot } from \"./components/Graphs\";\n\n// defined using let instead of const in case you want to set\n// other elements later based on primary/secondary colors\nlet lightTheme = light\nlet darkTheme = dark\n\n// uncomment next line to define additional customizations\n// theme = createTheme(theme, {**});\n\n// import data file\n// @TODO change this to a database query\nconst cskData = require(\"./data/csk_data.json\")\n\n// generate lists for select menu\nconst fSelDisp = cskData[\"fastener_data\"].map(x => mathUtils.selectFormat(x.metadata))\nconst fSelVal = cskData[\"fastener_data\"].map(x => x.metadata.id)\n\nexport default function App() {\n  const [darkMode, toggleDark] = React.useState(false);\n  const [readyToCalc, setReady] = React.useState(false)\n  const [userInputs, setInputs] = React.useState({\n    fbru: \"\",\n    unit: \"psi\",\n    fast_sel: \"\"\n  });\n  // @TODO expand state with userKcsk\n  const outputSchema = {\n    rawData: {},\n    nomKcsk: [],\n    userKcsk: [],\n    graph1CJS: null,\n    graph2CJS: null,\n    graph3CJS: null\n  }\n  const [outputState, setOutputs] = React.useState(outputSchema)\n\n  let theme = darkMode ? darkTheme : lightTheme;\n\n  // set default text properties for chart objects\n  ChartJS.defaults.font.size = 14;\n  ChartJS.defaults.color = theme.palette.text.primary;\n\n  const handleChange = function (e) {\n    setInputs(prevState => {\n      return { ...prevState, ...{ [e.target.name]: e.target.value } }\n    })\n    setReady(false)\n    setOutputs(outputSchema)\n    e.preventDefault()\n  }\n\n  const calculate = function (e) {\n    // only perform if all inputs are present\n    // @TODO Make user Fbru optional and don't populate third graph if empty\n    if (userInputs.fast_sel === \"\") {\n      alert(\"Please select a fastener first!\")\n    }\n    else {\n      setReady(true)\n      const selectedData = cskData[\"fastener_data\"].find(x => x.metadata.id === userInputs.fast_sel)\n      setOutputs(prevState => {\n        return {\n          ...prevState, ...{\n            rawData: selectedData,\n          }\n        }\n      })\n\n      // Calc everything first then pass to a single setOutputs call\n\n      // calculate bearing-shear strength envelopes for each dataset\n      let plotPenv = selectedData.dataset.map(el => mathUtils.genPlotPenv(\n        el.tsht,\n        el.d,\n        selectedData.metadata.sht_fbru2A,\n        selectedData.metadata.fast_fsu\n      ))\n\n      // calculate nondim strength knockdowns for test data\n      let nK = selectedData.dataset.map(el => mathUtils.calcUltKnockdown(\n        el.tsht,\n        el.Pult,\n        el.tcsk,\n        el.d,\n        selectedData.metadata.sht_fbru2A,\n        selectedData.metadata.fast_fsu\n      ))\n      // console.log(nK)\n\n      // calculate nondim strength knockdowns for user-supplied Fbru input\n      // @TODO (if present)\n      let uK = selectedData.dataset.map(el => mathUtils.calcUltKnockdown(\n        el.tsht,\n        el.Pult,\n        el.tcsk,\n        el.d,\n        userInputs.fbru,\n        selectedData.metadata.fast_fsu\n      ))\n\n      // generate data object for data-envelope plot component\n      \n      let graph1CJS = plotUtils.fmtEnvPlotData({\n        points: selectedData.dataset,\n        envelope: plotPenv\n      })\n      \n\n      // generate data object for test data Kcsk plot component\n      let graph2CJS = plotUtils.fmtKndPlotData(nK)\n\n      // generate data object for user Kcsk plot component\n      let graph3CJS = plotUtils.fmtKndPlotData(uK)\n\n      setOutputs(prevState => {\n        return {\n          ...prevState, ...{\n            nomKcsk: nK,\n            userKcsk: uK,\n            graph1CJS: graph1CJS,\n            graph2CJS: graph2CJS,\n            graph3CJS: graph3CJS\n          }\n        }\n      })\n    }\n    e.preventDefault()\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box className=\"App\" sx={{ width: \"75%\", marginLeft: \"12.5%\", marginRight: \"12.5%\" }}>\n        <NavBar themeToggle={() => toggleDark(!darkMode)} />\n        <Paper elevation={3} sx={{ marginTop: \"20px\", padding: \"10px\" }}>\n          <Typography component=\"div\">\n            <Box sx={{ typography: \"h3\", textAlign: \"center\" }}>Countersunk Joint Knockdown Calculator</Box>\n            <br />\n            <Box sx={{ typography: \"p\", textAlign: \"center\" }}>\n              (<em>June 2022 - in work</em>)<br />\n              This tool calculates strength knockdown factors for single-shear joints based on fastener type, fastener head style,\n              and parent material properties. <br />\n\n              Data source: MIL-HDBK-5J / MMPDS-01.\n            </Box>\n            <br />\n            <Accordion TransitionProps={{ unmountOnExit: true }}>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                id=\"instructions-acc-header\">Instructions</AccordionSummary>\n              <AccordionDetails>\n                <Box sx={{ typography: \"p\", textAlign: \"left\" }}>\n                  Select fastener type from available datasets to generate knockdown curve.<br/><br />\n                  Provide ultimate bearing strength of your specific joint configuration to scale the non-dimensional knockdown\n                  curve appropriately (<em>implementation TBD</em>).\n                  <br /> <br />\n                  <b>Fastener Type:</b> Dataset for knockdown curve generation. Select based on fastener type, head style, and material ultimate shear strength. <em>(required)</em><br />\n                  <s><b>Sheet Fbru:</b> Ultimate bearing strength of user sheet material</s> <em>(not yet implemented)</em><br />\n                  <s><b>Units:</b> Units for user input &amp; display output</s> <em>(not yet implemented)</em> <br />\n                </Box>\n                <br />\n                <Box sx={{ typography: \"subtitle\", textAlign: \"center\" }}>Returns</Box>\n                <Box sx={{ typography: \"p\" }}>\n                  1. Plot of selected dataset with ultimate bearing-shear envelopes for each diameter <br />\n                  2. Plot of non-dimensional bearing strength knockdown vs countersink depth ratio for dataset<br />\n                </Box>\n              </AccordionDetails>\n            </Accordion>\n            \n          </Typography>\n        </Paper>\n        <InputsCard\n          fbruVal={userInputs.fbru}\n          unitVal={userInputs.unit}\n          fastVal={userInputs.fast_sel}\n          fastList={fSelVal}\n          fastDisp={fSelDisp}\n          hdlChg={handleChange}\n          hdlSub={calculate}\n          sx={{ textAlign: \"center\" }} />\n        <Paper elevation={3} sx={{ padding: \"10px\", textAlign: \"center\" }}>\n          <Typography variant=\"overline\">Outputs</Typography><br />\n          <InfoPanel expanded={readyToCalc} metadata={outputState.rawData.metadata} />\n          <br />\n          <span>{readyToCalc ?\n            \"Click legend entries to toggle data display\" :\n            \"User input required. Press 'Calculate' when ready\"}\n          </span>\n          <DataEnvPlot CJS={ChartJS} data={outputState.graph1CJS} />\n          <KcskPlot CJS={ChartJS} data={outputState.graph2CJS} userScaled={false} />\n        </Paper>\n        <Footer />\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}