{"version":3,"sources":["styles.js","NavBar.js","InputsCard.js","mathUtils.js","plotUtils.js","App.js","index.js"],"names":["light","createTheme","palette","mode","primary","main","secondary","background","default","dark","paper","buttonSVG","viewBox","width","height","fill","cx","cy","r","stroke","strokeWidth","d","NavBar","props","themeToggle","Fragment","AppBar","position","Toolbar","Link","href","underline","color","sx","ml","mr","Typography","flexGrow","Button","onClick","Footer","className","style","fontSize","margin","textAlign","InputsCard","fastSelEntries","fastList","map","val","ind","MenuItem","value","fastDisp","Paper","elevation","marginTop","marginBottom","padding","variant","Box","component","noValidate","autoComplete","onSubmit","hdlSub","FormControl","TextField","required","id","label","type","name","fbruVal","onChange","hdlChg","FormLabel","RadioGroup","row","unitVal","FormControlLabel","control","Radio","m","minWidth","InputLabel","Select","labelId","fastVal","FormHelperText","selectFormat","Fsu_psi","psi_val","mjs","calcUltKnockdown","t","Pult","tcsk","Fbru","Fsu","Penv","Pbru","Psu","F","pi","P_i","jointStrengthEnvelope","tcsk_t","Kcsk","x","a","b","T10RGB","blue","orange","red","teal","green","yellow","purple","pink","brown","grey","T10RGB50A","colorNames","Object","keys","genKcskPlot","rawData","xLabel","yLabel","titleText","options","scales","min","max","beginAtZero","title","display","text","y","plugins","legend","formattedData","el","console","log","xData","yData","borderColor","backgroundColor","dataTuples","data","pointBorderColor","pointBackgroundColor","pointRadius","showLine","ChartJS","register","LinearScale","PointElement","LineElement","Tooltip","Title","Legend","genEnvPlot","ultPts","points","tsht","envPlots","nomKcsk","borderDash","concat","defaults","font","size","lightTheme","darkTheme","cskData","require","fSelDisp","mathUtils","metadata","fast_fsu","fSelVal","App","mpa_val","React","useState","darkMode","toggleDark","readyToCalc","setReady","fbru","unit","fast_sel","userInputs","setInputs","outputSchema","userKcsk","outputState","setOutputs","theme","kcskPlot","plotUtils","rawDataPlot","dataset","ThemeProvider","CssBaseline","marginLeft","marginRight","e","prevState","target","preventDefault","alert","selectedData","find","nK","sht_fbru2A","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","AccordionDetails","fast_ref","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.ee91d2ef.chunk.js","sourcesContent":["import {createTheme } from \"@mui/material/styles\";\n\nexport const light = createTheme({\n    palette: {\n      mode: \"light\",\n      primary: {\n        main: \"#1976d2\"\n      },\n      secondary: {\n        main: \"#d32f2f\"\n      },\n      background: {\n        default: \"#f5f5f5\"\n      }\n    }\n  });\n  \nexport const dark = createTheme({\npalette: {\n    mode: \"dark\",\n    primary: {\n    main: \"#1976d2\"\n    },\n    secondary: {\n    main: \"#d32f2f\"\n    },\n    background: {\n    default: \"rgb(43, 42, 51)\",\n    paper: \"rgba(66, 65, 77, 1)\"\n    }\n}\n});","import React from \"react\";\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport Button from \"@mui/material/Button\"\n\nconst buttonSVG = <svg viewBox=\"0 0 32 32\" width=\"24\" height=\"24\" fill=\"currentcolor\">\n                    <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"none\" stroke=\"currentcolor\" strokeWidth=\"4\"></circle>\n                    <path d=\"M 16 0 A 16 16 0 0 0 16 32 z\">\n                    </path>\n                </svg>\n\nexport function NavBar(props){\n    const {themeToggle} = props\n    return(\n        <React.Fragment>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n            <Link href=\"https://edp8489.github.io\"  underline=\"hover\" color=\"inherit\" sx={{ml:\"10px\", mr:\"10px\"}}>Home</Link>\n            <Link href=\"https://edp8489.github.io/portfolio\"  underline=\"hover\" color=\"inherit\" sx={{ml:\"10px\", mr:\"10px\"}}>Projects</Link>\n            <Typography sx={{flexGrow:1}}>&nbsp;</Typography>\n            <Button  color=\"inherit\" onClick={themeToggle} >{buttonSVG}</Button>\n            </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </React.Fragment>\n    )\n}\n\n\nexport function Footer(){\n  return(\n    <div className=\"credits\" style={{\n      fontSize: '0.8em',\n      margin: '8em auto -4em auto',\n      textAlign: 'center',\n  }} >\n      ©&nbsp;2022&nbsp;Eric Peters\n      &nbsp;\n      •\n      &nbsp;\n      <a href=\"https://edp8489.github.io\">Homepage</a>\n      &nbsp;\n      •\n      &nbsp;\n      <a href=\"https://www.linkedin.com/in/eric-peters-a187aa17/\">Linkedin</a>\n      &nbsp;\n      •\n      &nbsp;\n      <a href=\"https://github.com/edp8489\">github</a>\n  </div>\n  )\n}","import Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Select from '@mui/material/Select';\nimport Button from \"@mui/material/Button\";\n\nexport default function InputsCard(props){\n  // required props:\n  // state variable for numeric input value {fbruVal}\n  // state variable for unit radio value {unitVal}\n  // state variable for fastener Fsu select value {fastVal}\n  // state variable for fasteler select display text {fastDisp}\n  // handleChange function {hdlChg}\n  // handleSubmit function {hdlSub}\n  // array of options for fastener Fsu select {fastList}\n\n  const fastSelEntries = props.fastList.map((val, ind)=>(<MenuItem key={ind} value={val}>{props.fastDisp[ind]}</MenuItem>));\n\n\n  return(\n    <Paper elevation={3} sx={{ marginTop: \"10px\", marginBottom: \"10px\", padding:\"10px\" }}>\n      <Typography variant=\"overline\" >Inputs</Typography>\n      <br />\n      <Box\n      component=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={props.hdlSub}\n    >\n      <div>\n      <FormControl sx={{margin:\"10px\"}}>\n      <TextField\n          required\n          id=\"fbru-input\"\n          label=\"Sheet Fbru\"\n          type=\"number\"\n          name=\"fbru\"\n          value={props.fbruVal}\n          onChange={props.hdlChg}\n        />\n      </FormControl>\n      <FormControl sx={{margin:\"10px\"}}>\n      <FormLabel id=\"unit-radio-buttons-group-label\">Units</FormLabel>\n      <RadioGroup\n        row\n        aria-labelledby=\"units-radio-buttons-group-label\"\n        name=\"unit\"\n        value={props.unitVal}\n        onChange={props.hdlChg}\n      >\n        <FormControlLabel value=\"psi\" control={<Radio />} label=\"psi\" />\n        <FormControlLabel value=\"MPa\" control={<Radio />} label=\"MPa\" />\n      </RadioGroup>\n    </FormControl>\n    </div>\n    <div>\n    <FormControl sx={{ m: 1, minWidth: 200 }}>\n        <InputLabel id=\"fastener-select-helper-label\">Fastener Fsu</InputLabel>\n        <Select\n          required\n          labelId=\"fastener-select-helper-label\"\n          id=\"fastener-select-helper\"\n          label=\"Fastener Fsu\"\n          name=\"fast_sel\"\n          value={props.fastVal}\n          onChange={props.hdlChg}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {fastSelEntries}\n        </Select>\n        <FormHelperText>Fastener Shear Strength</FormHelperText>\n      </FormControl>\n    </div>\n    <Button variant=\"contained\" type=\"submit\">Calculate</Button>\n    </Box>\n    </Paper>\n  )\n}","import * as mjs from 'mathjs';\n\nconst MPA_TO_PSI = 145 // 1 MPa = 145 psi\nconst LBF_TO_NEWTON = 4.448 // 1 lbf = 4.448 N\n\nexport function mpa2psi(mpa_val){\n    return mjs.round(mpa_val*MPA_TO_PSI)\n  }\n\nexport function psi2mpa(psi_val){\n  return mjs.round(psi_val/MPA_TO_PSI)\n}\n  \nexport function lbf2newton(lbf_val){\n    return mjs.round(lbf_val*LBF_TO_NEWTON)\n  }\n\nexport function selectFormat(Fsu_psi){\n  let Fsu_ksi = Fsu_psi/1000\n  let Fsu_MPa = psi2mpa(Fsu_psi)\n\n  return (Fsu_ksi + \" ksi (\" + Fsu_MPa +\" MPa)\")\n\n}\nexport function calcUltKnockdown(t, Pult, tcsk, d, Fbru, Fsu){\n  /*\n  Calculates nondimensional joint knockdown based on supplied data\n  INPUTS\n    t: array of joint thickness values [in]\n    P: array of joint (yld or ult) strength data [lbf]\n    tcsk: fastener countersunk head height [in]\n    d: fastener major diameter [in]\n    Fbru: sheet A-basis bearing strength [psi]\n    Fsu: fastener ultimate shear strength [psi]\n\n  RETURNS\n    tcsk_t: countersink depth ratio tcsk/t\n    Kcsk: Non-dimensional strength knockdown P/(joint bearing/shear envelope)\n  */\n let Penv = jointStrengthEnvelope(t,d,Fbru,Fsu);\n\n // calculate csk depth ratio for all sheet thicknesses\n let tcsk_t = mjs.dotDivide(tcsk,t);\n //console.log(tcsk_t)\n\n // calculate Kcsk for valid data pairs\n let Kcsk = Pult.map((x, ind) => mjs.evaluate(\"a/b\",{a:x, b:Penv[ind]}))\n\n  return {tcsk_t, Kcsk, Penv, d }\n}\n\nexport function calcUserKnockdown(userFbru, nomKcsk) {\n  // @TODO\n}\n\nexport function jointStrengthEnvelope(t, d, Fbru, Fsu){\n  /* Calculates bearing-shear strength envelope\n  INPUTS\n    t: array of joint thickness values [in]\n    d: hole nominal diameter [in]\n    Fbru: Joint ultimate bearing strength [psi]\n    Fsu: Fastener ultimate shear strength [psi]\n  RETURNS\n    Penv: (array) Ultimate load corresponding to each sheet thickness [lbf]\n  */\n let Pbru = mjs.evaluate(\"t*d*Fbru\",{t:t, d:d, Fbru:Fbru});\n let Psu = mjs.evaluate(\"F*pi*(d^2)/4\",{d:d, F:Fsu,pi:mjs.pi});\n let Penv = Pbru.map((P_i)=>mjs.min(P_i,Psu));\n return Penv\n}","import { Chart, Scatter } from 'react-chartjs-2';\nimport {\n    Chart as ChartJS,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Title,\n    Legend,\n  } from 'chart.js';\n\nexport const tableau10Hex = {\n    blue: \"#5778a4\",\n    orange: \"#e49444\",\n    red: \"#d1615d\",\n    teal: \"#85b6b2\",\n    green: \"#6a9f58\",\n    yellow: \"#e7ca60\",\n    purple: \"#a87c9f\",\n    pink: \"#f1a2a9\",\n    brown: \"#967662\",\n    grey: \"#b8b0ac\"\n}\n\nexport const T10RGB = {\n    blue: \"rgba(87, 120, 164, 1)\",\n    orange: \"rgba(228, 148, 68, 1)\",\n    red: \"rgba(209, 97, 93, 1)\",\n    teal: \"rgba(133, 182, 178, 1)\",\n    green: \"rgba(106, 159, 88, 1)\",\n    yellow: \"rgba(231, 202, 96, 1)\",\n    purple: \"rgba(168, 124, 159, 1)\",\n    pink: \"rgba(241, 162, 169, 1)\",\n    brown: \"rgba(150, 118, 98, 1)\",\n    grey: \"rgba(184, 176, 172, 1)\"\n}\n\nexport const T10RGB50A = {\n    blue: \"rgba(87, 120, 164, 0.5)\",\n    orange: \"rgba(228, 148, 68, 0.5)\",\n    red: \"rgba(209, 97, 93, 0.5)\",\n    teal: \"rgba(133, 182, 178, 0.5)\",\n    green: \"rgba(106, 159, 88, 0.5)\",\n    yellow: \"rgba(231, 202, 96, 0.5)\",\n    purple: \"rgba(168, 124, 159, 0.5)\",\n    pink: \"rgba(241, 162, 169, 0.5)\",\n    brown: \"rgba(150, 118, 98, 0.5)\",\n    grey: \"rgba(184, 176, 172, 0.5)\"\n}\n\nconst colorNames = Object.keys(tableau10Hex);\n\n// @TODO Set text color (ChartJS.defaults.color) based on darkMode\nChartJS.defaults.font.size = 14\n\nexport function genKcskPlot(rawData, xLabel, yLabel, titleText){\n    // define plotting options\n    const options = {\n        scales: {\n            x:{\n                type:\"linear\",\n                min: 0,\n                max: 1,\n                beginAtZero: true,\n                title: {\n                    display:true, \n                    text:xLabel}\n            },\n            y:{\n                type:\"linear\",\n                min:0.5,\n                max:1.1,\n                beginAtZero: true,\n                title: {\n                    display: true,\n                    text: yLabel}\n            }\n        },\n        plugins: {\n            legend:{\n                position: \"right\"\n            },\n            title:{\n                display: true,\n                text: titleText\n            }\n        }\n    }\n\n    // prepare raw data for plotting\n    /* content:\n        data = {\n            datasets: [\n                {\n                    label: \"d = ## in\",\n                    data: [\n                        {\n                        x: [],\n                        y: []\n                        }\n                    ],\n                    borderColor: \"\",\n                    backgroundColor: \"\"\n                }\n            ],\n        }\n    */\n    let formattedData = {}\n    formattedData[\"datasets\"] = rawData.map((el, ind) => {\n        //todo\n        console.log(\"el: \")\n        console.log(el)\n        let label = \"d = \" + el.d + \" in\"\n        let xData = el.tcsk_t\n        let yData = el.Kcsk\n        let borderColor = T10RGB[colorNames[ind]]\n        //console.log(borderColor)\n        let backgroundColor = T10RGB50A[colorNames[ind]]\n        //console.log(backgroundColor)\n        let dataTuples = xData.map((x, ind) => {return {x: x, y:yData[ind]}})\n\n        // package everything\n        let dataset_i = {\n            label: label,\n            data: dataTuples,\n            pointBorderColor: borderColor,\n            pointBackgroundColor: backgroundColor,\n            pointRadius:4,\n            borderColor: backgroundColor,\n            backgroundColor:backgroundColor,\n            showLine: true\n        }\n        return dataset_i\n    })\n    console.log(formattedData)\n\n    ChartJS.register(LinearScale, PointElement, LineElement, Tooltip, Title, Legend);\n    return <Scatter options={options} data={formattedData} />\n}\n\nexport function genEnvPlot(rawData, xLabel, yLabel, titleText){\n    /*\n        rawData = {\n            points: [selectedData.dataset],\n            Penv: [nomCsk.Penv]\n        }\n    */\n    // define plotting options\n    console.log(rawData)\n    const options = {\n        scales: {\n            x:{\n                type:\"linear\",\n                //min: 0,\n                //max: 1,\n                beginAtZero: true,\n                title: {\n                    display:true, \n                    text:xLabel}\n            },\n            y:{\n                type:\"linear\",\n                //min:0.5,\n                //max:1.1,\n                beginAtZero: true,\n                title: {\n                    display: true,\n                    text: yLabel}\n            }\n        },\n        plugins: {\n            legend:{\n                position: \"top\"\n            },\n            title:{\n                display: true,\n                text: titleText\n            }\n        }\n    }\n\n    // prepare raw data for plotting\n    /* content:\n        data = {\n            datasets: [\n                {\n                    label: \"d = ## in\",\n                    data: [\n                        {\n                        x: [],\n                        y: []\n                        }\n                    ],\n                    borderColor: \"\",\n                    backgroundColor: \"\"\n                }\n            ],\n        }\n    */\n    let formattedData = {}\n    let ultPts = rawData.points.map((el, ind) => {\n        //todo\n        console.log(\"el: \")\n        console.log(el)\n        let label = \"d = \" + el.d + \" in\"\n        let xData = el.tsht\n        let yData = el.Pult\n        let borderColor = T10RGB[colorNames[ind]]\n        //console.log(borderColor)\n        let backgroundColor = T10RGB50A[colorNames[ind]]\n        //console.log(backgroundColor)\n        let dataTuples = xData.map((x, ind) => {return {x: x, y:yData[ind]}})\n\n        // package everything\n        let dataset_i = {\n            label: label,\n            data: dataTuples,\n            pointBorderColor: borderColor,\n            pointBackgroundColor: backgroundColor,\n            borderColor: backgroundColor,\n            backgroundColor:backgroundColor,\n            showLine: true\n        }\n        return dataset_i\n    })\n    //console.log(formattedData)\n    const envPlots = rawData.nomKcsk.map((el, ind) => {\n        //todo\n        console.log(\"el: \")\n        console.log(el)\n        let label = \"Strength Envelope\"\n        let xData = rawData.points[ind].tsht\n        let yData = el.Penv\n        let borderColor = T10RGB[colorNames[ind]]\n        //console.log(borderColor)\n        let backgroundColor = T10RGB50A[colorNames[ind]]\n        //console.log(backgroundColor)\n        let dataTuples = xData.map((x, ind) => {return {x: x, y:yData[ind]}})\n\n        // package everything\n        let dataset_i = {\n            label: label,\n            data: dataTuples,\n            pointRadius: 0,\n            borderColor: borderColor,\n            backgroundColor:backgroundColor,\n            borderDash: [10, 10],\n            showLine: true\n        }\n        return dataset_i\n    })\n    //formattedData[\"datasets\"].append(envPlots)\n    formattedData[\"datasets\"] = ultPts.concat(envPlots)\n    console.log(formattedData)\n\n    ChartJS.register(LinearScale, PointElement, LineElement, Tooltip, Title, Legend);\n    return <Scatter options={options} data={formattedData} />\n}","import { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { Box, Paper } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport {light, dark} from \"./styles.js\";\nimport {NavBar, Footer} from \"./NavBar\";\nimport InputsCard from \"./InputsCard\";\nimport * as mathUtils from \"./mathUtils\"\nimport * as plotUtils from \"./plotUtils\"\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\n// defined using let instead of const in case you want to set\n// other elements later based on primary/secondary colors\nlet lightTheme = light\nlet darkTheme = dark\n\n// uncomment next line to define additional customizations\n// theme = createTheme(theme, {**});\n\n// DEBUG ONLY\n// define junk data\n//const fsuSelect = [\"50 ksi (345 MPa)\", \"95 ksi (655 MPa)\", \"108 ksi (745 MPa)\"]\nconst cskData = require(\"./data/csk_data.json\")\n//console.log(Object.keys(cskData))\n//console.log(cskData[\"fastener_data\"].map(x=>x.metadata.fast_fsu))\nconst fSelDisp = cskData[\"fastener_data\"].map(x=>mathUtils.selectFormat(x.metadata.fast_fsu))\nconst fSelVal = cskData[\"fastener_data\"].map(x=>x.metadata.id)\n\nconst summary = \"This tool calculates strength knockdown factors for \" +\n                \"single-shear joints based on fastener type, fastener head style, \" +\n                \"and parent material properties.\\nAll strength data comes from from MIL-HDBK-5J / MMPDS-01\"\n\nexport default function App() {\n  const [darkMode, toggleDark] = React.useState(false);\n  const [readyToCalc, setReady] = React.useState(false)\n  const [userInputs, setInputs] = React.useState({\n    fbru: \"\",\n    unit: \"psi\",\n    fast_sel: \"\"\n  });\n  // @TODO expand state with Kcsk_user\n  const outputSchema = {\n    rawData:{},\n    nomKcsk:[],\n    userKcsk: []\n  }\n  const [outputState, setOutputs] = React.useState(outputSchema)\n  \n  let theme = darkMode ? darkTheme : lightTheme;\n\n  const handleChange = function(e) {\n    setInputs(prevState => {\n      return{...prevState, ...{[e.target.name]:e.target.value}}\n    })\n    setReady(false)\n    setOutputs(outputSchema)\n    e.preventDefault()\n  }\n\n  const calculate = function(e){\n    // only perform if all inputs are present\n    if (userInputs.fbru ===\"\" || userInputs.fast_sel ===\"\"){\n      alert(\"Please define all inputs first!\")\n    }\n    else {\n      setReady(true)\n      const selectedData = cskData[\"fastener_data\"].find(x => x.metadata.id === userInputs.fast_sel)\n      console.log(selectedData)\n      setOutputs(prevState =>{\n        return{...prevState, ...{rawData:selectedData}}\n      })\n      \n      // mathUtils.calcUltKnockdown(t, Pult, tcsk, d, Fbru, Fsu)\n      // calculate (tcsk_t, nomKcsk) for raw data\n      // @TODO\n      \n      let nK = selectedData.dataset.map(el => mathUtils.calcUltKnockdown(\n        el.tsht,\n        el.Pult,\n        el.tcsk,\n        el.d,\n        selectedData.metadata.sht_fbru2A,\n        selectedData.metadata.fast_fsu\n      ))\n      // console.log(nK)\n      setOutputs(prevState =>{\n        return{...prevState, ...{nomKcsk: nK}}\n      })\n      // calculate (tcsk_t, userKcsk) for user-supplied Fbru input\n      // @TODO\n    }\n    e.preventDefault()\n  }\n  let kcskPlot = readyToCalc? plotUtils.genKcskPlot(\n    outputState.nomKcsk,\n     \"Countersink Depth Ratio (tcsk / t) [-]\",\n     \"Joint Strength Knockdown (Kcsk) [-]\",\n     \"Joint Strength Knockdown (nominal data)\"\n  ) :\n  plotUtils.genKcskPlot(\n    outputSchema.nomKcsk,\n     \"Countersink Depth Ratio (tcsk / t) [-]\",\n     \"Joint Strength Knockdown (Kcsk) [-]\",\n     \"Joint Strength Knockdown (nominal data)\"\n  )\n\n  let rawDataPlot = readyToCalc? plotUtils.genEnvPlot(\n    {points: outputState.rawData.dataset,nomKcsk:outputState.nomKcsk},\n    \"Sheet thickness (t) [in]\",\n    \"Joint Ultimate Strength [lbf]\",\n    \"Joint Ultimate Strength w/ Bearing-Shear Envelope\"\n  ) :\n  plotUtils.genEnvPlot(\n    {points:[],nomKcsk:[]},\n    \"Sheet thickness (t) [in]\",\n    \"Joint Ultimate Strength [lbf]\",\n    \"Joint Ultimate Strength w/ Bearing-Shear Envelope\")\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box className=\"App\" sx={{ textAlign: \"center\", width: \"75%\", marginLeft:\"12.5%\", marginRight:\"12.5%\" }}>\n        <NavBar themeToggle={() => toggleDark( !darkMode )} />\n        <Paper elevation={3} sx={{ marginTop: \"20px\", padding:\"10px\" }}>\n          <Typography variant=\"h3\">Countersunk Joint Knockdown Calculator</Typography>\n          <br />\n          <Typography variant=\"p\">\n            (in work)<br />\n            {summary}\n          </Typography>\n          <br />\n          <br />\n        </Paper>\n        <InputsCard \n          fbruVal={userInputs.fbru}\n          unitVal={userInputs.unit}\n          fastVal={userInputs.fast_sel}\n          fastList={fSelVal}\n          fastDisp={fSelDisp}\n          hdlChg={handleChange}\n          hdlSub={calculate} />\n        <Paper elevation={3} sx={{padding: \"10px\"}}>\n          <Typography variant=\"subtitle1\">Outputs</Typography><br />\n          <span>{readyToCalc? \"Calculated values (debug use)\":\"User input required. Press 'Calculate' when ready\"}</span>\n          <Accordion TransitionProps={{unmountOnExit: true}}>\n            <AccordionSummary \n                expandIcon={<ExpandMoreIcon />} \n                id=\"debug-acc-header\">\n              <Typography>Debug Info</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n            <ul>\n            <li>Fastener dropdown id: {readyToCalc? userInputs.fast_sel: \"\"}</li>\n            <li>Data Source: {readyToCalc? outputState.rawData.metadata.fast_ref: \"\"}</li>\n            <li>User Fbru input: {readyToCalc? userInputs.fbru : \"\"} [{readyToCalc? userInputs.unit : \"\"}]</li>\n            <li>User Fbru (psi): {(readyToCalc && userInputs.unit!==\"psi\")?mathUtils.mpa2psi(userInputs.fbru):\"no conversion necessary\"}</li>\n          </ul>\n            </AccordionDetails>\n          </Accordion>\n          {rawDataPlot}\n          {kcskPlot}\n        </Paper>\n        <Footer />\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}